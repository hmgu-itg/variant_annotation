Bootstrap: docker
From: ubuntu:18.04

%environment
	TZ=Europe/Berlin
	PATH=$PATH:/usr/bin:/usr/local/bin:/usr/bin/variant_annotation
	export PATH
	
	LC_ALL=C
	export LC_ALL

	PYTHONPATH=$PYTHONPATH:/usr/bin/variant_annotation/python
	export PYTHONPATH
	
%post
	apt update
	ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
	apt-get install -y r-base libcurl4-openssl-dev libxml2-dev libmariadbclient-dev libssl-dev
	apt-get install -y apt python python-pip python3 python3-pip wget iputils-ping git gcc gfortran libc6 libc-bin libc-dev-bin make libblas-dev liblapack-dev libatlas-base-dev curl zlib1g zlib1g-dev libbz2-1.0 libbz2-dev libbz2-ocaml libbz2-ocaml-dev liblzma-dev lzma lzma-dev unzip

	cd /usr/local/bin
	wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64.v385/liftOver
	chmod +x liftOver
	wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/liftOver/hg38ToHg19.over.chain.gz
	wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/liftOver/hg19ToHg38.over.chain.gz
	
	cd /
	git clone git://github.com/samtools/htslib.git
	cd /htslib
	make tabix
	make bgzip
	cd /
	mv /htslib/bgzip /usr/bin
	mv /htslib/tabix /usr/bin

	rm -r htslib
	
	export DEBIAN_FRONTEND=noninteractive
	
	apt-get install -y libcairo2-dev libxt-dev
	apt-get install -y python3-pip
	pip3 install h5py scipy

	apt-get update

	pip install virtualenv powerline-status bitarray nose pybedtools scipy pandas numpy
	cd /

	Rscript -e "install.packages(c('Cairo', 'plotrix', 'data.table'))"

	apt-get install -y jq bsdmainutils bc autoconf libtool bc man-db freeglut3 freeglut3-dev xorg x11-utils emacs feh chromium-browser r-base-core cmake libboost-dev libboost-all-dev libopenblas-dev htop tofrodos libjsoncpp-dev
	pip3 install CrossMap cget pandas
	apt install -y moreutils ncurses-term default-jre default-jdk locales
	sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
	locale-gen
	dpkg-reconfigure --frontend=noninteractive locales

	cd /
	git clone https://github.com/arq5x/bedtools2.git
	cd /bedtools2
	# gwava needs a version without "sam header" error messages
	git checkout tags/v2.27.1
	make
	make install


	wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-linux.tar.gz
	tar -xvzf pandoc-2.7.3-linux.tar.gz && mv pandoc-2.7.3/bin/pandoc /usr/bin

	curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt-get install -y nodejs && npm install --unsafe-perm=true -g electron@1.8.4 orca && pip3 install psutil requests

	cd /
	git clone git://github.com/pezmaster31/bamtools.git
	cd /bamtools
	mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/bamtools .. && make install && cp /bamtools/bin/bamtools /usr/bin
	apt install -y source-highlight
	cd /
	git clone https://github.com/zd1/telseq && cd telseq/src && chmod +x autogen.sh && ./autogen.sh && ./configure --with-bamtools=/bamtools && make && cp Telseq/telseq /usr/bin

	pip3 install bokeh jinja2

	apt-get install rsync

	cd /usr/bin

	git clone https://github.com/hmgu-itg/variant_annotation.git

	pip3 install selenium dash plotly kaleido
	apt-get install -y firefox

	cd /usr/bin
	wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
	tar -zxvf geckodriver-v0.26.0-linux64.tar.gz
	rm geckodriver-v0.26.0-linux64.tar.gz
	
	Rscript -e "install.packages(c('svglite', 'reshape2', 'ggplot2'))"

	# for gwava
	pip install scikit-learn==0.14.1

	CREATIONDATE=`date`

%runscript
	echo "This container was created: $CREATIONDATE"

%labels
	Author Arthur Gilly, Andrei Barysenka
	Version v2.5

%help
	This container allows you to run variant annotation pipeline; for more information run this container with the help command line option.


