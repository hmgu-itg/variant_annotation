Bootstrap: docker
From: ubuntu:18.04

%environment
	TZ=Europe/Berlin
#  PERL_MM_USE_DEFAULT=1
#	export PERL_MM_USE_DEFAULT
#	PERL_EXTUTILS_AUTOINSTALL="--defaultdeps"
#	export PERL_EXTUTILS_AUTOINSTALL
	PATH=$PATH:/usr/local/bin:/usr/local/bin/variant_annotation
	export PATH
	LC_ALL=C
	export LC_ALL
	export PYTHONPATH=/usr/local/bin/variant_annotation/python:$PYTHONPATH
%post
	apt update
	ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

	apt install -y locales
	sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
	locale-gen
	dpkg-reconfigure --frontend=noninteractive locales

	DEBIAN_FRONTEND="noninteractive" apt install -y software-properties-common build-essential git python3 python3-pip wget tabix moreutils 
	#libraries for orca
	DEBIAN_FRONTEND="noninteractive" apt install -y curl libgtk2.0-0 libx11-xcb-dev libxtst6 libxss1 libgconf-2-4 libnss3 libasound2 xvfb xauth firefox-geckodriver

	pip3 install --upgrade setuptools 
	pip3 install argparse jinja2 pandas selenium psutil plotly requests
	curl -sL https://deb.nodesource.com/setup_12.x | bash - && apt-get install -y nodejs && npm install --unsafe-perm=true -g electron@1.8.4
    mkdir -p /opt/orca && \
    cd /opt/orca && \
    wget https://github.com/plotly/orca/releases/download/v1.2.1/orca-1.2.1-x86_64.AppImage && \
    chmod +x orca-1.2.1-x86_64.AppImage && \
    ./orca-1.2.1-x86_64.AppImage --appimage-extract && \
    rm orca-1.2.1-x86_64.AppImage && chmod -R a+rx /opt/orca/squashfs-root &&\
    printf '#!/bin/bash \nxvfb-run --auto-servernum --server-args "-screen 0 640x480x24" /opt/orca/squashfs-root/app/orca "$@"' > /usr/bin/orca && \
    chmod +x /usr/bin/orca

	cd /usr/local/bin
	git clone https://github.com/hmgu-itg/variant_annotation

	# liftOver
	wget http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64.v385/liftOver
	chmod +x liftOver
	wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg38/liftOver/hg38ToHg19.over.chain.gz
	wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/liftOver/hg19ToHg38.over.chain.gz

	# # R packages needed for shiny app
	# apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
	# add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
	# DEBIAN_FRONTEND="noninteractive" apt-get install -y r-base
	# apt-get install -y libcurl4-openssl-dev libssl-dev
	# Rscript --vanilla -e "install.packages(c(\"shiny\",\"plotly\",\"shinyjs\",\"jsonlite\"),repos = \"http://cran.us.r-project.org\")"



	CREATIONDATE=`date`

%runscript
	echo "This container was created: $CREATIONDATE"

%labels
	Author Arthur Gilly, Andrei Barysenka, Daniel Suveges
	Version v0.2

%help
	This container wraps the variant annotator at https://github.com/hmgu-itg/variant_annotation.
